all_name <- c(all_name, name)
email <- html_text(node.email)
all_email <- c(all_email, email)
# title <- html_text(node.title)
# all_title <- c(all_title, title)
#print(i)
#}
pnorm
?pnorm
pnorm(0.25)
dnorm(0.25)
pnorm(1)
1-pnorm(0.25)
pnorm(5/(2*sqrt(2))
)
1-pnorm(5/(2*sqrt(2)))
pnorm(1.57786318312)
1 - pnorm(1.57786318312)
pchisq(25/8)
pchisq(25/8, df =1)
1 - pchisq(25/8, df = 1)
1/2*(1 - pchisq(25/8, df = 1))
pchisq (500/4, df = 100)
1 - pchisq (500/4, df = 100)
1/2 * (1 - pchisq (500/4, df = 100))
x = 3.2
y = exp(x)
y
ls()
z = c(3, 0.5, x, y+4)
str= c("a", "b")
y = seq(0, 0.75, by = 0.25)
y
y = rep(NA, 5)
y
(1:5)^2
(1:5)*(3:7)
(1:5)%*%(3:7)
dnorm(0, 0.1)
pnorm(0,0,1)
dnorm(0, 0,1)
qnorm(0.5, 0, 1)
rnorm(100, 0, 1)
n <- 40 # sample size
m <- c(1:200) #create a vector of length 200
for (i in 1:200) { #simulate 200 samples
x <- rnorm(n)
m[i] <- mean(x) }
hist(m)
n <- 100 # sample size
m <- c(1:200) #create a vector of length 200
for (i in 1:200) { #simulate 200 samples
x <- rnorm(n)
m[i] <- mean(x) }
hist(m)
pnorm(5,0,(5^0.5))
pnorm(2,0,(3^0.5))
1-pnorm(2,0,(3^0.5))
pnorm(5^0.5)
pnorm(2/(3^0.5))
z = matrix(NA, nrow = 10, ncol = 40)
for (i in 1:10){
for (n in 1:40){
x = runif(n, 0, 2)
z[i, n] = mean(x^2)
}
}
plot(x = 1:40, y = z[1, ], type = " ")
z = matrix(NA, nrow = 10, ncol = 40)
for (i in 1:10){
for (n in 1:40){
x = runif(n, 0, 2)
z[i, n] = mean(x^2)
}
}
plot(x = 1:40, y = z[1, ], type = ".")
z = matrix(NA, nrow = 10, ncol = 40)
for (i in 1:10){
for (n in 1:40){
x = runif(n, 0, 2)
z[i, n] = mean(x^2)
}
}
plot(x = 1:40, y = z[1, ], type = ".")
z = matrix(NA, nrow = 10, ncol = 40)
for (i in 1:10){
for (n in 1:40){
x = runif(n, 0, 2)
z[i, n] = mean(x^2)
}
}
plot(x = 1:40, y = z[1, ])
z = matrix(NA, nrow = 10, ncol = 40)
for (i in 1:10){
for (n in 1:40){
x = runif(n, 0, 2)
z[i, n] = mean(x^2)
}
}
plot(x = 1:40, y = z[1, ])
for (n in 2:10){
lines(x = 1:40, y = z[n, ])
}
z = matrix(NA, nrow = 10, ncol = 40)
for (i in 1:10){
for (n in 1:40){
x = runif(n, 0, 2)
z[i, n] = mean(x^2)
}
}
plot(x = 1:40, y = z[1, ])
for (n in 1:10){
lines(x = 1:40, y = z[n, ])
}
z = matrix(NA, nrow = 10, ncol = 40)
for (i in 1:10){
for (n in 1:40){
x = runif(n, 0, 2)
z[i, n] = mean(x^2)
}
}
plot(x = 1:40, y = z[1, ], type = "l")
for (n in 1:10){
lines(x = 1:40, y = z[n, ])
}
?dnorm
dnorm(x, mu, 2)
mu =  seq(-5, 5, by = 0.001)
dnorm(x, mu, 2)
mu =  seq(-5, 5, by = 0.001)
dnorm(x, mu, 2)
plot(x = mu, y = mu + 5, type = "l")
x = rnorm(20, 1, 2)
x
#plot(x = mu, y = mu + 5, type = "l
y = rnorm(20, 1, 2)
theta = c(1, 2)
lik = function(theta,y){
mu = theta[1]
sigma2 = theta[2]
n = 20
logl<- -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
return(-logl)
}
#plot(x = mu, y = mu + 5, type = "l
y = rnorm(20, 1, 2)
lik = function(mu, y){
sigma2 = 4
n = 20
logl<- -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
return(-logl)
}
plot(x = mu, y = lik, type = "l")
y = rnorm(20, 1, 2)
lik = function(mu, y){
sigma2 = 4
n = 20
logl<- -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
return(-logl)
}
plot(lik, type = "l")
y = rnorm(20, 1, 2)
lik = function(mu, y){
sigma2 = 4
n = 20
logl<- -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
return(-logl)
}
plot(lik, type = "l")
y = rnorm(20, 1, 2)
lik = function(mu, y){
sigma2 = 4
n = 20
logl<- -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
return(-logl)
}
plot(y, lik, type = "l")
y = rnorm(20, 1, 2)
lik = function(mu, y){
sigma2 = 4
n = 20
logl<- -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
return(-logl)
}
plot(mu, lik, type = "l")
y = rnorm(20, 1, 2)
lik = function(mu, y){
sigma2 = 4
n = 20
logl =  -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
return(logl)
}
plot(mu, lik, type = "l")
y = rnorm(20, 1, 2)
y
lik = function(mu, y){
sigma2 = 4
n = 20
logl =  -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
return(logl)
}
plot(mu, lik, type = "l")
y = rnorm(20, 1, 2)
mu = seq(-5, 5, by = 0.001)
lik = function(mu, y){
sigma2 = 4
n = 20
logl =  -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
return(logl)
}
plot(mu, lik, type = "l")
y = rnorm(20, 1, 2)
mu = seq(-5, 5, by = 0.001)
mu
lik = function(mu, y){
sigma2 = 4
n = 20
logl =  -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
return(logl)
}
plot(mu, lik, type = "l")
y = rnorm(20, 1, 2)
mu = seq(-5, 5, by = 0.5)
mu
lik = function(mu, y){
sigma2 = 4
n = 20
logl =  -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
return(logl)
}
plot(mu, lik, type = "l")
y = rnorm(20, 1, 2)
y
mu = seq(-5, 5, by = 0.5)
mu
lik = function(mu, y){
sigma2 = 4
n = 20
logl =  -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
return(logl)
}
plot(mu, lik, type = "l")
y = rnorm(20, 1, 2)
y
mu = seq(-5, 5, by = 0.5)
mu
lik = function(mu, y){
sigma2 = 4
n = 20
logl =  -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
return(logl)
}
lik
plot(mu, lik, type = "l")
y = rnorm(20, 1, 2)
y
mu = seq(-5, 5, by = 0.5)
mu
lik = function(mu, y){
sigma2 = 4
n = 20
logl =  -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
return(logl)
}
logl
y = rnorm(20, 1, 2)
y
mu = seq(-5, 5, by = 0.5)
mu
lik = function(mu, y){
sigma2 = 4
n = 20
logl =  -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
return(logl)
}
plot(mu, lik, type = "l")
y = rnorm(20, 1, 2)
y
mu = seq(-5, 5, by = 0.5)
mu
lik = function(mu, y){
sigma2 = 4
n = 20
logl =  -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
return(logl)
}
length(mu)
length(lik)
plot(mu, lik, type = "l")
y = rnorm(20, 1, 2)
y
mu = seq(-5, 5, by = 0.5)
mu
lik = function(mu, y){
sigma2 = 4
n = 20
logl =  -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
}
length(mu)
length(lik)
plot(mu, lik, type = "l")
y = rnorm(20, 1, 2)
y
mu = seq(-5, 5, by = 0.5)
mu
lik = function(mu, y){
sigma2 = 4
n = 20
logl =  -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
}
length(mu)
length(lik)
plot(mu, lik, type = "l")
y = rnorm(20, 1, 2)
y
mu = seq(-5, 5, by = 0.5)
mu
lik = function(mu, y){
sigma2 = 4
n = 20
logl =  -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
}
length(mu)
length(lik)
plot(mu, sapply(mu, FUN = lik), type = "l")
y = rnorm(20, 1, 2)
y
mu = seq(-5, 5, by = 0.5)
mu
lik = function(mu, y){
sigma2 = 4
n = 20
logl =  -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
}
length(mu)
length(lik)
plot(mu, sapply(mu, FUN = lik), type = "l")
y = rnorm(20, 1, 2)
y
mu = seq(-5, 5, by = 0.5)
mu
lik = function(mu, y){
sigma2 = 4
n = 20
logl =  -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
}
length(mu)
length(lik)
sapply(mu, FUN = lik)
y = rnorm(20, 1, 2)
y
mu = seq(-5, 5, by = 0.5)
mu
lik = function(mu, y){
sigma2 = 4
n = 20
logl =  -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
return(logl)
}
length(mu)
length(lik)
sapply(mu, FUN = lik)
y = rnorm(20, 1, 2)
y
mu = seq(-5, 5, by = 0.5)
mu
lik = function(mu, y){
sigma2 = 4
n = 20
logl =  -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
return(logl)
}
length(mu)
length(lik)
sapply(mu, FUN = lik)
y = rnorm(20, 1, 2)
mu = seq(-5, 5, by = 0.5)
lik = function(mu, y){
sigma2 = 4
n = 20
logl =  -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
return(logl)
}
plot(mu, sapply(mu, FUN = lik), type = "l")
y = rnorm(20, 1, 2)
mu = seq(-5, 5, by = 0.5)
lik = function(mu, y){
sigma2 = 4
n = 20
logl =  -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
return(logl)
}
#plot(mu, sapply(mu, FUN = lik), type = "l")
a = matrix(c(0.5,0.25,0.25,  0.25,0.5,0.25,  0.25,0.25,0.5))
a
a = matrix(c(0.5,0.25,0.25,  0.25,0.5,0.25,  0.25,0.25,0.5), ncol = 3, nrow = 3, byrow = TRUE)
A
a
b = matrix(c(0,0.5,0.5  0.5,0,0.5,  0.5,0.5,0), ncol = 3, nrow = 3, byrow = TRUE)
b = matrix(c(0,0.5,0.5,  0.5,0,0.5,  0.5,0.5,0), ncol = 3, nrow = 3, byrow = TRUE)
b
b %*% b
b = a
b
b = matrix(c(0,0.5,0.5,  0.5,0,0.5,  0.5,0.5,0), ncol = 3, nrow = 3, byrow = TRUE)
a %*%b
c = a %*% b
b %*% c
library(showtext)
install.packages('showtext')
library(showtext)
install.packages('showtext')
library(showtext)
install.packages('showtext')
library(showtext)
update.packages(checkBuilt = TRUE)
update.packages(checkBuilt = TRUE)
load("/Users/ginzheng/Documents/GitHub/matters-metadata/csv/STM_matters.RData")
setwd("~/Documents/Github/decentralizedcommplatform/tg_data")
library(lubridate)
library(ggplot2)
library(scales)
channel_data <- read.csv('telegram_channel_data.csv')
channel_data$Date <- as.Date(channel_data$Date)
channel_data$Time <- as.POSIXct(channel_data$Time, format = "%H:%M")
channel_data$Views <- as.numeric(channel_data$Views)
daily_plot <- ggplot(channel_data, aes(x=Date, y=Views))
daily_plot + geom_bar(stat="identity") + scale_x_date(breaks=date_breaks("2 weeks"))
View(channel_data)
daily_plot + geom_line(colour="blue") + geom_point(colour="blue4") + scale_x_date(breaks=date_breaks("2 weeks"))
channel_data <- read.csv('telegram_channel_data.csv')
channel_data$Date <- as.Date(channel_data$Date)
channel_data$Time <- as.POSIXct(channel_data$Time, format = "%H:%M")
daily_plot <- ggplot(channel_data, aes(x=Date, y=Views))
daily_plot + geom_bar(stat="identity") + scale_x_date(breaks=date_breaks("2 weeks"))
daily_plot + geom_bar(stat="identity") + scale_x_date(breaks=date_breaks("2 weeks")) + scale_y_discrete()
max(channel_data$Views)
daily_plot + geom_bar(stat="identity") + scale_x_date(breaks=date_breaks("2 weeks")) + scale_y_continuous(breaks=seq(0,60,5), limits=c(0,60) )
daily_plot + geom_bar(stat="identity") + scale_x_date(breaks=date_breaks("2 weeks")) + scale_y_continuous(breaks=seq(0,60,5), limits=c(0,80) )
daily_plot <- ggplot(channel_data, aes(x=Date, y=Views))
daily_plot + scale_x_date(breaks=date_breaks("2 weeks")) + scale_y_continuous(breaks=seq(0,60,5), limits=c(0,80) )
daily_plot + geom_line(colour="blue") + geom_point(colour="blue4") + scale_x_date(breaks=date_breaks("2 weeks"))
daily_plot <- ggplot(channel_data, aes(x=Date, y=Views))
daily_plot + geom_line(colour="blue") + geom_point(colour="blue4") + scale_x_date(breaks=date_breaks("2 weeks"))
daily_plot <- ggplot(channel_data, aes(x=Date, y=Views))
daily_plot + geom_line(colour="blue") + geom_point(colour="blue4") + scale_x_date(breaks=date_breaks("2 weeks"))
ggplot(channel_data, aes(x=Time, y=Views, group=Date)) +
geom_path(size=.5, alpha = 0.1, colour="blue") +
scale_x_datetime(breaks=date_breaks("2 hour") +
scale_y_continuous(breaks = c(0, ))                  , labels=date_format("%H:%M"))
ggplot(channel_data, aes(x=Time, y=Views, group=Date)) +
geom_path(size=.5, alpha = 0.1, colour="blue") +
scale_x_datetime(breaks=date_breaks("2 hour"), labels=date_format("%H:%M"))
daily_plot <- ggplot(channel_data, aes(x=Date, y=Views))
daily_plot + geom_line(colour="blue") + geom_point(colour="blue4") + scale_x_date(breaks=date_breaks("2 weeks")) + scale_y_continuous(breaks=seq(0,60,5))
ggplot(channel_data, aes(x=Time, y=Views, group=Date)) +
geom_path(size=.5, alpha = 0.1, colour="blue") +
scale_x_datetime(breaks=date_breaks("2 hour"), labels=date_format("%H:%M"))
?aes
minute_plot <- ggplot(channel_data, aes(x=Time, y=Views, group=Date)) +
geom_path(size=.5, alpha = 0.1, colour="blue") +
scale_x_datetime(breaks=date_breaks("2 hour"), labels=date_format("%H:%M"))
minute_plot <- ggplot(channel_data, aes(x=Time, y=Views, group=Date))
minute_plot + geom_path(size=.5, alpha = 0.1, colour="blue") +scale_x_datetime(breaks=date_breaks("2 hour"), labels=date_format("%H:%M"))
minute_plot + geom_path(size=.5, alpha = 0.1, colour="blue") + scale_x_datetime(breaks=date_breaks("2 hour")) + scale_y_continuous(breaks=seq(0,60,5)) + labels=date_format("%H:%M")
minute_plot <- ggplot(channel_data, aes(x=Time, y=Views, group=Date))
minute_plot + geom_path(size=.5, alpha = 0.1, colour="blue") + scale_x_datetime(breaks=date_breaks("2 hour")) + scale_y_continuous(breaks=seq(0,60,5)) + labels=date_format("%H:%M")
minute_plot <- ggplot(channel_data, aes(x=Time, y=Views, group=Date)) +
geom_path(size=.5, alpha = 0.1, colour="blue") +
scale_x_datetime(breaks=date_breaks("2 hour")) + scale_y_continuous(breaks=seq(0,60,5)) + labels=date_format("%H:%M")
minute_plot <- ggplot(channel_data, aes(x=Time, y=Views, group=Date)) +
geom_path(size=.5, alpha = 0.1, colour="blue") +
scale_x_datetime(breaks=date_breaks("2 hour")) +
scale_y_continuous(breaks=seq(0,60,5)), labels=date_format("%H:%M")
minute_plot <- ggplot(channel_data, aes(x=Time, y=Views, group=Date)) +
geom_path(size=.5, alpha = 0.1, colour="blue") +
scale_x_datetime(breaks=date_breaks("2 hour")) +
scale_y_continuous(breaks=seq(0,60,5)), labels=date_format("%H:%M")
ggplot(channel_data, aes(x=Time, y=Views, group=Date))+
geom_path(size=.5, alpha = 0.1, colour="blue") +
scale_x_datetime(breaks=date_breaks("2 hour"), labels=date_format("%H:%M")) +
scale_y_continuous(breaks=seq(0,60,5))
ggplot(channel_data, aes(x=Time, y=Views, group=Date))+
geom_path(size=.5, alpha = 0.6, colour="blue") +
scale_x_datetime(breaks=date_breaks("2 hour"), labels=date_format("%H:%M")) +
scale_y_continuous(breaks=seq(0,60,5))
ggplot(channel_data, aes(x=Time, y=Views, group=Date))+
geom_point(size=.5, alpha = 0.6, colour="blue") +
scale_x_datetime(breaks=date_breaks("2 hour"), labels=date_format("%H:%M")) +
scale_y_continuous(breaks=seq(0,60,5))
minute_plot <-  ggplot(channel_data, aes(x=Time, y=Views, group=Date))
minute_plot + geom_point(size=.5, alpha = 0.6, colour="blue") +
scale_x_datetime(breaks=date_breaks("2 hour"), labels=date_format("%H:%M")) +
scale_y_continuous(breaks=seq(0,60,5))
daily_plot <- ggplot(channel_data, aes(x=Date, y=Views))
daily_plot + geom_line(colour="blue") + geom_point(colour="blue4") + scale_x_date(breaks=date_breaks("2 weeks")) + scale_y_continuous(breaks=seq(0,60,5))
setwd("~/Documents/Github/decentralizedcommplatform/tg_data")
library(lubridate)
library(ggplot2)
library(scales)
fc_data<- read.csv('factcheck_data.csv')
fc_data$Date <- as.Date(fc_data$Date)
fc_data$Time <- as.POSIXct(fc_data$Time, format = "%H:%M")
fc_data$Views <- as.numeric(fc_data$Views)
fc_daily_plot <- ggplot(fc_data, aes(x=Date, y=Views))
fc_daily_plot + geom_line(colour="blue") + geom_point(colour="blue4") + scale_x_date(breaks=date_breaks("2 weeks")) + scale_y_continuous(breaks=seq(0,60,5))
fc_minute_plot <-  ggplot(fc_data, aes(x=Time, y=Views, group=Date))
fc_minute_plot + geom_point(size=.5, alpha = 0.6, colour="blue") +
scale_x_datetime(breaks=date_breaks("2 hour"), labels=date_format("%H:%M")) +
scale_y_continuous(breaks=seq(0,60,5))
fc_daily_plot <- ggplot(fc_data, aes(x=Date, y=Views))
fc_daily_plot + geom_line(colour="blue") + geom_point(colour="blue4") + scale_x_date(breaks=date_breaks("2 weeks")) + scale_y_continuous(breaks=seq(0,60,5))
