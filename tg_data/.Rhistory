plot(mu, lik, type = "l")
y = rnorm(20, 1, 2)
mu = seq(-5, 5, by = 0.001)
lik = function(mu, y){
sigma2 = 4
n = 20
logl =  -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
return(logl)
}
plot(mu, lik, type = "l")
y = rnorm(20, 1, 2)
mu = seq(-5, 5, by = 0.001)
mu
lik = function(mu, y){
sigma2 = 4
n = 20
logl =  -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
return(logl)
}
plot(mu, lik, type = "l")
y = rnorm(20, 1, 2)
mu = seq(-5, 5, by = 0.5)
mu
lik = function(mu, y){
sigma2 = 4
n = 20
logl =  -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
return(logl)
}
plot(mu, lik, type = "l")
y = rnorm(20, 1, 2)
y
mu = seq(-5, 5, by = 0.5)
mu
lik = function(mu, y){
sigma2 = 4
n = 20
logl =  -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
return(logl)
}
plot(mu, lik, type = "l")
y = rnorm(20, 1, 2)
y
mu = seq(-5, 5, by = 0.5)
mu
lik = function(mu, y){
sigma2 = 4
n = 20
logl =  -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
return(logl)
}
lik
plot(mu, lik, type = "l")
y = rnorm(20, 1, 2)
y
mu = seq(-5, 5, by = 0.5)
mu
lik = function(mu, y){
sigma2 = 4
n = 20
logl =  -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
return(logl)
}
logl
y = rnorm(20, 1, 2)
y
mu = seq(-5, 5, by = 0.5)
mu
lik = function(mu, y){
sigma2 = 4
n = 20
logl =  -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
return(logl)
}
plot(mu, lik, type = "l")
y = rnorm(20, 1, 2)
y
mu = seq(-5, 5, by = 0.5)
mu
lik = function(mu, y){
sigma2 = 4
n = 20
logl =  -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
return(logl)
}
length(mu)
length(lik)
plot(mu, lik, type = "l")
y = rnorm(20, 1, 2)
y
mu = seq(-5, 5, by = 0.5)
mu
lik = function(mu, y){
sigma2 = 4
n = 20
logl =  -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
}
length(mu)
length(lik)
plot(mu, lik, type = "l")
y = rnorm(20, 1, 2)
y
mu = seq(-5, 5, by = 0.5)
mu
lik = function(mu, y){
sigma2 = 4
n = 20
logl =  -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
}
length(mu)
length(lik)
plot(mu, lik, type = "l")
y = rnorm(20, 1, 2)
y
mu = seq(-5, 5, by = 0.5)
mu
lik = function(mu, y){
sigma2 = 4
n = 20
logl =  -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
}
length(mu)
length(lik)
plot(mu, sapply(mu, FUN = lik), type = "l")
y = rnorm(20, 1, 2)
y
mu = seq(-5, 5, by = 0.5)
mu
lik = function(mu, y){
sigma2 = 4
n = 20
logl =  -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
}
length(mu)
length(lik)
plot(mu, sapply(mu, FUN = lik), type = "l")
y = rnorm(20, 1, 2)
y
mu = seq(-5, 5, by = 0.5)
mu
lik = function(mu, y){
sigma2 = 4
n = 20
logl =  -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
}
length(mu)
length(lik)
sapply(mu, FUN = lik)
y = rnorm(20, 1, 2)
y
mu = seq(-5, 5, by = 0.5)
mu
lik = function(mu, y){
sigma2 = 4
n = 20
logl =  -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
return(logl)
}
length(mu)
length(lik)
sapply(mu, FUN = lik)
y = rnorm(20, 1, 2)
y
mu = seq(-5, 5, by = 0.5)
mu
lik = function(mu, y){
sigma2 = 4
n = 20
logl =  -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
return(logl)
}
length(mu)
length(lik)
sapply(mu, FUN = lik)
y = rnorm(20, 1, 2)
mu = seq(-5, 5, by = 0.5)
lik = function(mu, y){
sigma2 = 4
n = 20
logl =  -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
return(logl)
}
plot(mu, sapply(mu, FUN = lik), type = "l")
y = rnorm(20, 1, 2)
mu = seq(-5, 5, by = 0.5)
lik = function(mu, y){
sigma2 = 4
n = 20
logl =  -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
return(logl)
}
#plot(mu, sapply(mu, FUN = lik), type = "l")
a = matrix(c(0.5,0.25,0.25,  0.25,0.5,0.25,  0.25,0.25,0.5))
a
a = matrix(c(0.5,0.25,0.25,  0.25,0.5,0.25,  0.25,0.25,0.5), ncol = 3, nrow = 3, byrow = TRUE)
A
a
b = matrix(c(0,0.5,0.5  0.5,0,0.5,  0.5,0.5,0), ncol = 3, nrow = 3, byrow = TRUE)
b = matrix(c(0,0.5,0.5,  0.5,0,0.5,  0.5,0.5,0), ncol = 3, nrow = 3, byrow = TRUE)
b
b %*% b
b = a
b
b = matrix(c(0,0.5,0.5,  0.5,0,0.5,  0.5,0.5,0), ncol = 3, nrow = 3, byrow = TRUE)
a %*%b
c = a %*% b
b %*% c
library(showtext)
install.packages('showtext')
library(showtext)
install.packages('showtext')
library(showtext)
install.packages('showtext')
library(showtext)
update.packages(checkBuilt = TRUE)
update.packages(checkBuilt = TRUE)
load("/Users/ginzheng/Documents/GitHub/matters-metadata/csv/STM_matters.RData")
setwd("~/Documents/Github/decentralizedcommplatform/tg_data")
library(lubridate)
library(ggplot2)
library(scales)
fc_data<- read.csv('factcheck.csv')
fc_data$Date <- as.Date(fc_data$Date)
fc_data$Time <- as.POSIXct(fc_data$Time, format = "%H:%M")
fc_data$Views <- as.numeric(fc_data$Views)
fc_daily_plot <- ggplot(fc_data, aes(x=Date, y=Views)) + ggtitle('Fact Check Channel Daily Views')
fc_daily_plot + geom_line(alpha = 0.5, colour="black") + geom_point(size=.4, alpha =0.8, colour="black") +
scale_x_date(breaks=date_breaks("2 weeks")) + scale_y_continuous(breaks=seq(0,60000,5000))
fc_minute_plot <-  ggplot(fc_data, aes(x=Time, y=Views, group=Date)) + ggtitle('Fact Check Channel Minutely Views')
fc_minute_plot + geom_point(size=.5, alpha = 0.5, colour="black") +
scale_x_datetime(breaks=date_breaks("2 hour"), labels=date_format("%H:%M")) +
scale_y_continuous(breaks=seq(0,60000,5000))
w_data<- read.csv('weather.csv')
w_data$Date <- as.Date(w_data$Date)
w_data$Time <- as.POSIXct(w_data$Time, format = "%H:%M")
w_data$Views <- as.numeric(w_data$Views)
w_daily_plot <- ggplot(w_data, aes(x=Date, y=Views)) + ggtitle('Weather Channel Daily Views')
w_daily_plot + geom_line(alpha=0.5, colour="blue") + geom_point(size=.4, alpha =0.8, colour="blue4") +
scale_x_date(breaks=date_breaks("2 weeks")) + scale_y_continuous(breaks=c(0,50,500,5000,10000,50000,100000,150000,200000))
w_minute_plot <-  ggplot(w_data, aes(x=Time, y=Views, group=Date)) + ggtitle('Weather Channel Minutely Views')
w_minute_plot + geom_point(size=.5, alpha = 0.5, colour="blue2") +
scale_x_datetime(breaks=date_breaks("2 hour"), labels=date_format("%H:%M")) +
scale_y_continuous(breaks=c(0,50,500,5000,10000,50000,100000,150000,200000), limits = c(0,100000))
sh_data<- read.csv('silverhair.csv')
sh_data$Date <- as.Date(sh_data$Date)
sh_data$Time <- as.POSIXct(sh_data$Time, format = "%H:%M")
sh_data$Views <- as.numeric(sh_data$Views)
sh_daily_plot <- ggplot(sh_data, aes(x=Date, y=Views)) + ggtitle('Silver Hair Channel Daily Views')
sh_daily_plot + geom_line(colour="darkgoldenrod2") + geom_point(size=.4, alpha =0.8, colour="darkorange2") +
scale_x_date(breaks=date_breaks("2 weeks")) + scale_y_continuous(breaks=seq(500,70000,5000))
sh_minute_plot <-  ggplot(sh_data, aes(x=Time, y=Views, group=Date)) + ggtitle('Silver Hair Channel Minutely Views')
sh_minute_plot + geom_point(size=.5, alpha = 0.5, colour="darkorange") +
scale_x_datetime(breaks=date_breaks("2 hour"), labels=date_format("%H:%M")) +
scale_y_continuous(breaks=seq(500,50000,5000), limits = c(0,45500))
al_data<- read.csv('adolescent.csv')
al_data$Date <- as.Date(al_data$Date)
al_data$Time <- as.POSIXct(al_data$Time, format = "%H:%M")
al_data$Views <- as.numeric(al_data$Views)
al_daily_plot <- ggplot(al_data, aes(x=Date, y=Views)) + ggtitle('Middle School Students Channel Daily Views')
al_daily_plot + geom_line(alpha = 0.3, colour="maroon2") + geom_point(size=.4, alpha =0.8, colour="violetred3") +
scale_x_date(breaks=date_breaks("2 weeks")) + scale_y_continuous(breaks=seq(0,125000,5000))
al_minute_plot <-  ggplot(al_data, aes(x=Time, y=Views, group=Date)) + ggtitle('Middle School Students Channel Minutely Views')
al_minute_plot + geom_point(size=.5, alpha = 0.5, colour="hotpink1") +
scale_x_datetime(breaks=date_breaks("2 hour"), labels=date_format("%H:%M")) +
scale_y_continuous(breaks=seq(0,1250000,30000))
swj_data<- read.csv('standwithjournalists.csv')
swj_data$Date <- as.Date(swj_data$Date)
swj_data$Time <- as.POSIXct(swj_data$Time, format = "%H:%M")
swj_data$Views <- as.numeric(swj_data$Views)
swj_daily_plot <- ggplot(swj_data, aes(x=Date, y=Views)) + ggtitle('Stand with Journalists Channel Daily Views')
swj_daily_plot + geom_line(alpha = 0.6, colour="springgreen3") + geom_point(size=.4, alpha =0.8, colour="green4") +
scale_x_date(breaks=date_breaks("4 days")) + scale_y_continuous(breaks=seq(1000,65000,5000))
swj_minute_plot <-  ggplot(swj_data, aes(x=Time, y=Views, group=Date)) + ggtitle('Stand with Journalists Channel Minutely Views')
swj_minute_plot + geom_point(size=.5, alpha = 1, colour="limegreen") +
scale_x_datetime(breaks=date_breaks("2 hour"), labels=date_format("%H:%M")) +
scale_y_continuous(breaks=seq(0,1250000,5000))
setwd("~/Desktop/Research/tech&protest/matters_data")
Sys.setlocale(category = 'LC_ALL','en_US.UTF-8')
library(ggpubr)
setwd("~/Documents/Github/dmp_hk/tg_data")
Sys.setlocale(category = 'LC_ALL','en_US.UTF-8')
require(ggpubr)
require(tidyverse)
install.packages('ggpubr')
install.packages('tidyverse')
Yes
install.packages('Hmisc')
install.packages('corrplot')
library(lubridate)
library(ggplot2)
library(scales)
library(ggpubr)
install.packages('magrittr')
install.packages("magrittr")
library(lubridate)
library(ggplot2)
library(scales)
library(ggpubr)
View(z)
kw_data <- read.csv('multiTimeline_telegram反送中.csv')
kw_data$Day <- as.Date(kw_data$Day)
kw_data$Telegram <- as.integer(kw_data$telegram...Hong.Kong.)
kw_data$反送中 <- as.numeric(levels(kw_data$反.送.中...Hong.Kong.))[kw_data$反.送.中...Hong.Kong.]
ggplot() + geom_line(data=kw_data, aes(x=Day, y=Telegram, color="Telegram")) +
ggtitle('Google Search Interest on Keywords over Time') + scale_x_date(breaks=date_breaks("1 month")) +
geom_line(data=kw_data, aes(x=Day, y=反送中, color="Anti-extradition to China")) +
scale_colour_manual("",values = c("Anti-extradition to China" = "red","Telegram" = "blue"))+
xlab("Date")+ylab("Relative Search Interest Scale")
cor(kw_data$Telegram, kw_data$反送中,  method = "pearson", use = "complete.obs")
ggscatter(kw_data, x = Telegram, y = 反送中,
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "pearson",
xlab = "Telegram", ylab = "Anti-extradition to China")
ggscatter(data = kw_data, x = Telegram, y = 反送中,
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "pearson",
xlab = "Telegram", ylab = "Anti-extradition to China")
ggscatter(data = kw_data, x = kw_data$Telegram, y = kw_data$反送中,
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "pearson",
xlab = "Telegram", ylab = "Anti-extradition to China")
kw_data <- read.csv('multiTimeline_telegram反送中.csv')
kw_data$Day <- as.Date(kw_data$Day)
kw_data$Telegram <- as.integer(kw_data$telegram...Hong.Kong.)
kw_data$反送中 <- as.numeric(levels(kw_data$反.送.中...Hong.Kong.))[kw_data$反.送.中...Hong.Kong.]
ggplot() + geom_line(data=kw_data, aes(x=Day, y=Telegram, color="Telegram")) +
ggtitle('Google Search Interest on Keywords over Time') + scale_x_date(breaks=date_breaks("1 month")) +
geom_line(data=kw_data, aes(x=Day, y=反送中, color="Anti-extradition to China")) +
scale_colour_manual("",values = c("Anti-extradition to China" = "red","Telegram" = "blue"))+
xlab("Date")+ylab("Relative Search Interest Scale")
cor(kw_data$Telegram, kw_data$反送中,  method = "pearson", use = "complete.obs")
ggscatter(data = kw_data, x = kw_data$Telegram, y = kw_data$反送中,
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "pearson",
xlab = "Telegram", ylab = "Anti-extradition to China")
ggscatter(data = kw_data, x = kw_data$Telegram, y = kw_data$反送中,
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "Telegram", ylab = "Anti-extradition to China")
ggscatter(data = kw_data, x = kw_data$Telegram, y = kw_data$反送中,
add = "reg.line", conf.int = TRUE,
add.params = list(color = "blue", fill = "lightgray"),
cor.coef = TRUE, cor.method = "pearson",
xlab = "Telegram", ylab = "Anti-extradition to China")
na.omit(kw_data)
cor(kw_data$Telegram, kw_data$反送中,  method = "pearson", use = "complete.obs")
ggscatter(data = kw_data, x = kw_data$Telegram, y = kw_data$反送中,
add = "reg.line", conf.int = TRUE,
add.params = list(color = "blue", fill = "lightgray"),
cor.coef = TRUE, cor.method = "pearson",
xlab = "Telegram", ylab = "Anti-extradition to China")
View(kw_data)
kw_data <- na.omit(kw_data)
cor(kw_data$Telegram, kw_data$反送中,  method = "pearson", use = "complete.obs")
ggscatter(data = kw_data, x = kw_data$Telegram, y = kw_data$反送中,
add = "reg.line", conf.int = TRUE,
add.params = list(color = "blue", fill = "lightgray"),
cor.coef = TRUE, cor.method = "pearson",
xlab = "Telegram", ylab = "Anti-extradition to China")
cor.test(kw_data$Telegram, kw_data$反送中,  method = "pearson")
cor.test(kw_data$Telegram, kw_data$反送中,  method = "spearman")
ggscatter(data = kw_data, x = kw_data$Telegram, y = kw_data$反送中,
add = "reg.line", conf.int = TRUE,
add.params = list(color = "blue", fill = "lightgray"),
cor.coef = TRUE, cor.method = "spearman",
xlab = "Telegram", ylab = "Anti-extradition to China")
cor.test(kw_data$Telegram, kw_data$反送中,  method = "kendall")
cor.test(kw_data$Telegram, kw_data$反送中,  method = "spearman")
cor(kw_data$Telegram, kw_data$反送中,  method = "pearson", use = "complete.obs")
cor.test(kw_data$Telegram, kw_data$反送中,  method = "spearman")
View(kw_data)
ggscatter(df, x = kw_data$Telegram, y = kw_data$反送中,
add = "reg.line", conf.int = TRUE,
add.params = list(color = "blue", fill = "lightgray"),
cor.coef = TRUE, cor.method = "spearman",
xlab = "Telegram", ylab = "Anti-extradition to China")
ggscatter(df, x = 'kw_data$Telegram', y = 'kw_data$反送中',
add = "reg.line", conf.int = TRUE,
add.params = list(color = "blue", fill = "lightgray"),
cor.coef = TRUE, cor.method = "spearman",
xlab = "Telegram", ylab = "Anti-extradition to China")
ggscatter(kw_data, x = 'kw_data$Telegram', y = 'kw_data$反送中',
add = "reg.line", conf.int = TRUE,
add.params = list(color = "blue", fill = "lightgray"),
cor.coef = TRUE, cor.method = "spearman",
xlab = "Telegram", ylab = "Anti-extradition to China")
View(kw_data)
ggscatter(kw_data, x = 'Telegram', y = '反送中',
add = "reg.line", conf.int = TRUE,
add.params = list(color = "blue", fill = "lightgray"),
cor.coef = TRUE, cor.method = "spearman",
xlab = "Telegram", ylab = "Anti-extradition to China")
ggscatter(kw_data, x = 'Telegram', y = '反送中',
add = "reg.line", color = 'red', conf.int = TRUE,
add.params = list(color = "blue", fill = "lightgray"),
cor.coef = TRUE, cor.method = "spearman",
xlab = "Telegram", ylab = "Anti-extradition to China")
ggscatter(kw_data, x = 'Telegram', y = '反送中',
add = "reg.line", color = 'red4', conf.int = TRUE,
add.params = list(color = "blue", fill = "lightgray"),
cor.coef = TRUE, cor.method = "spearman",
xlab = "Telegram", ylab = "Anti-extradition to China")
ggscatter(kw_data, x = 'Telegram', y = '反送中',
add = "reg.line", color = 'red4', conf.int = TRUE,
add.params = list(color = "blue", size = 1, fill = "lightgray"),
cor.coef = TRUE, cor.method = "spearman",
xlab = "Telegram", ylab = "Anti-extradition to China")
ggscatter(kw_data, x = 'Telegram', y = '反送中',
add = "reg.line", color = 'red4', conf.int = TRUE,
add.params = list(color = "blue", size = 1.5, fill = "lightgray"),
cor.coef = TRUE, cor.method = "spearman",
xlab = "Telegram", ylab = "Anti-extradition to China")
ggscatter(kw_data, x = 'Telegram', y = '反送中',
add = "reg.line", color = 'red2', conf.int = TRUE,
add.params = list(color = "blue", size = 1.5, fill = "lightgray"),
cor.coef = TRUE, cor.method = "spearman",
xlab = "Telegram", ylab = "Anti-extradition to China")
ggscatter(kw_data, x = 'Telegram', y = '反送中',
add = "reg.line", color = 'red3', conf.int = TRUE,
add.params = list(color = "blue", size = 1.5, fill = "lightgray"),
cor.coef = TRUE, cor.method = "spearman",
xlab = "Telegram", ylab = "Anti-extradition to China")
ggscatter(kw_data, x = 'Telegram', y = '反送中',
add = "reg.line", color = 'red3', conf.int = TRUE,
add.params = list(color = "blue", size = 1.5, fill = "gray"),
cor.coef = TRUE, cor.method = "spearman",
xlab = "Telegram", ylab = "Anti-extradition to China")
ggscatter(kw_data, x = 'Telegram', y = '反送中',
add = "reg.line", color = 'red3', conf.int = TRUE,
#add.params = list(color = "blue", size = 1.5, fill = "gray"),
cor.coef = TRUE, cor.method = "spearman",
xlab = "Telegram", ylab = "Anti-extradition to China")
ggscatter(kw_data, x = 'Telegram', y = '反送中',
add = "reg.line", color = 'blue', conf.int = TRUE,
#add.params = list(color = "blue", size = 1.5, fill = "gray"),
cor.coef = TRUE, cor.method = "spearman",
xlab = "Telegram", ylab = "Anti-extradition to China")
ggscatter(kw_data, x = 'Telegram', y = '反送中',
add = "reg.line", color = 'black', conf.int = TRUE,
#add.params = list(color = "blue", size = 1.5, fill = "gray"),
cor.coef = TRUE, cor.method = "spearman",
xlab = "Telegram", ylab = "Anti-extradition to China")
ggscatter(kw_data, x = 'Telegram', y = '反送中',
add = "reg.line", color = 'black', size = 0.8, conf.int = TRUE,
#add.params = list(color = "blue", size = 1.5, fill = "gray"),
cor.coef = TRUE, cor.method = "spearman",
xlab = "Telegram", ylab = "Anti-extradition to China")
ggscatter(kw_data, x = 'Telegram', y = '反送中',
add = "reg.line", color = 'black', size = 0.9, conf.int = TRUE,
#add.params = list(color = "blue", size = 1.5, fill = "gray"),
cor.coef = TRUE, cor.method = "spearman",
xlab = "Telegram", ylab = "Anti-extradition to China")
ggscatter(kw_data, x = 'Telegram', y = '反送中',
add = "reg.line", color = 'black', size = 1, conf.int = TRUE,
#add.params = list(color = "blue", size = 1.5, fill = "gray"),
cor.coef = TRUE, cor.method = "spearman",
xlab = "Telegram", ylab = "Anti-extradition to China")
ggscatter(kw_data, y = 'Telegram', x = '反送中',
add = "reg.line", color = 'black', size = 1, conf.int = TRUE,
#add.params = list(color = "blue", size = 1.5, fill = "gray"),
cor.coef = TRUE, cor.method = "spearman",
ylab = "Telegram", xlab = "Anti-extradition to China")
ggscatter(kw_data, y = 'Telegram', x = '反送中',
add = "reg.line", color = 'black', size = 1, conf.int = TRUE,
#add.params = list(color = "blue", size = 1.5, fill = "gray"),
cor.coef = TRUE, cor.method = "pearson",
ylab = "Telegram", xlab = "Anti-extradition to China")
ggscatter(kw_data, y = 'Telegram', x = '反送中',
add = "reg.line", color = 'black', size = 1, conf.int = TRUE,
#add.params = list(color = "blue", size = 1.5, fill = "gray"),
cor.coef = TRUE, cor.method = "spearman",
ylab = "Telegram", xlab = "Anti-extradition to China")
ggscatter(kw_data, y = 'Telegram', x = '反送中',
add = "reg.line", color = 'black', size = 1.2, conf.int = TRUE,
#add.params = list(color = "blue", size = 1.5, fill = "gray"),
cor.coef = TRUE, cor.method = "spearman",
ylab = "Telegram", xlab = "Anti-extradition to China")
ggplot() + ggscatter(kw_data, y = 'Telegram', x = '反送中',
add = "reg.line", color = 'black', size = 1.2, conf.int = TRUE,
#add.params = list(color = "blue", size = 1.5, fill = "gray"),
cor.coef = TRUE, cor.method = "spearman",
ylab = "Telegram", xlab = "Anti-extradition to China")
ggplot() + geon_catter(kw_data, y = 'Telegram', x = '反送中',
add = "reg.line", color = 'black', size = 1.2, conf.int = TRUE,
#add.params = list(color = "blue", size = 1.5, fill = "gray"),
cor.coef = TRUE, cor.method = "spearman",
ylab = "Telegram", xlab = "Anti-extradition to China")
ggplot() + geom_catter(kw_data, y = 'Telegram', x = '反送中',
add = "reg.line", color = 'black', size = 1.2, conf.int = TRUE,
#add.params = list(color = "blue", size = 1.5, fill = "gray"),
cor.coef = TRUE, cor.method = "spearman",
ylab = "Telegram", xlab = "Anti-extradition to China")
ggplot() + geom_scatter(kw_data, y = 'Telegram', x = '反送中',
add = "reg.line", color = 'black', size = 1.2, conf.int = TRUE,
#add.params = list(color = "blue", size = 1.5, fill = "gray"),
cor.coef = TRUE, cor.method = "spearman",
ylab = "Telegram", xlab = "Anti-extradition to China")
ggplot() + geom_point(kw_data, y = 'Telegram', x = '反送中',
add = "reg.line", color = 'black', size = 1.2, conf.int = TRUE,
#add.params = list(color = "blue", size = 1.5, fill = "gray"),
cor.coef = TRUE, cor.method = "spearman",
ylab = "Telegram", xlab = "Anti-extradition to China")
ggplot() + geom_point(kw_data, aes(y = 'Telegram', x = '反送中'),
add = "reg.line", color = 'black', size = 1.2, conf.int = TRUE,
#add.params = list(color = "blue", size = 1.5, fill = "gray"),
cor.coef = TRUE, cor.method = "spearman",
ylab = "Telegram", xlab = "Anti-extradition to China")
ggplot() + geom_point(kw_data, aes(y = 'Telegram', x = '反送中'),
add = "reg.line", color = 'black', size = 1.2, conf.int = TRUE,
#add.params = list(color = "blue", size = 1.5, fill = "gray"),
cor.coef = TRUE, cor.method = "spearman",
ylab = "Telegram", xlab = "Anti-extradition to China")
