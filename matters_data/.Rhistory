plot(x = 1:40, y = z[1, ], type = ".")
z = matrix(NA, nrow = 10, ncol = 40)
for (i in 1:10){
for (n in 1:40){
x = runif(n, 0, 2)
z[i, n] = mean(x^2)
}
}
plot(x = 1:40, y = z[1, ])
z = matrix(NA, nrow = 10, ncol = 40)
for (i in 1:10){
for (n in 1:40){
x = runif(n, 0, 2)
z[i, n] = mean(x^2)
}
}
plot(x = 1:40, y = z[1, ])
for (n in 2:10){
lines(x = 1:40, y = z[n, ])
}
z = matrix(NA, nrow = 10, ncol = 40)
for (i in 1:10){
for (n in 1:40){
x = runif(n, 0, 2)
z[i, n] = mean(x^2)
}
}
plot(x = 1:40, y = z[1, ])
for (n in 1:10){
lines(x = 1:40, y = z[n, ])
}
z = matrix(NA, nrow = 10, ncol = 40)
for (i in 1:10){
for (n in 1:40){
x = runif(n, 0, 2)
z[i, n] = mean(x^2)
}
}
plot(x = 1:40, y = z[1, ], type = "l")
for (n in 1:10){
lines(x = 1:40, y = z[n, ])
}
?dnorm
dnorm(x, mu, 2)
mu =  seq(-5, 5, by = 0.001)
dnorm(x, mu, 2)
mu =  seq(-5, 5, by = 0.001)
dnorm(x, mu, 2)
plot(x = mu, y = mu + 5, type = "l")
x = rnorm(20, 1, 2)
x
#plot(x = mu, y = mu + 5, type = "l
y = rnorm(20, 1, 2)
theta = c(1, 2)
lik = function(theta,y){
mu = theta[1]
sigma2 = theta[2]
n = 20
logl<- -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
return(-logl)
}
#plot(x = mu, y = mu + 5, type = "l
y = rnorm(20, 1, 2)
lik = function(mu, y){
sigma2 = 4
n = 20
logl<- -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
return(-logl)
}
plot(x = mu, y = lik, type = "l")
y = rnorm(20, 1, 2)
lik = function(mu, y){
sigma2 = 4
n = 20
logl<- -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
return(-logl)
}
plot(lik, type = "l")
y = rnorm(20, 1, 2)
lik = function(mu, y){
sigma2 = 4
n = 20
logl<- -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
return(-logl)
}
plot(lik, type = "l")
y = rnorm(20, 1, 2)
lik = function(mu, y){
sigma2 = 4
n = 20
logl<- -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
return(-logl)
}
plot(y, lik, type = "l")
y = rnorm(20, 1, 2)
lik = function(mu, y){
sigma2 = 4
n = 20
logl<- -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
return(-logl)
}
plot(mu, lik, type = "l")
y = rnorm(20, 1, 2)
lik = function(mu, y){
sigma2 = 4
n = 20
logl =  -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
return(logl)
}
plot(mu, lik, type = "l")
y = rnorm(20, 1, 2)
y
lik = function(mu, y){
sigma2 = 4
n = 20
logl =  -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
return(logl)
}
plot(mu, lik, type = "l")
y = rnorm(20, 1, 2)
mu = seq(-5, 5, by = 0.001)
lik = function(mu, y){
sigma2 = 4
n = 20
logl =  -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
return(logl)
}
plot(mu, lik, type = "l")
y = rnorm(20, 1, 2)
mu = seq(-5, 5, by = 0.001)
mu
lik = function(mu, y){
sigma2 = 4
n = 20
logl =  -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
return(logl)
}
plot(mu, lik, type = "l")
y = rnorm(20, 1, 2)
mu = seq(-5, 5, by = 0.5)
mu
lik = function(mu, y){
sigma2 = 4
n = 20
logl =  -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
return(logl)
}
plot(mu, lik, type = "l")
y = rnorm(20, 1, 2)
y
mu = seq(-5, 5, by = 0.5)
mu
lik = function(mu, y){
sigma2 = 4
n = 20
logl =  -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
return(logl)
}
plot(mu, lik, type = "l")
y = rnorm(20, 1, 2)
y
mu = seq(-5, 5, by = 0.5)
mu
lik = function(mu, y){
sigma2 = 4
n = 20
logl =  -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
return(logl)
}
lik
plot(mu, lik, type = "l")
y = rnorm(20, 1, 2)
y
mu = seq(-5, 5, by = 0.5)
mu
lik = function(mu, y){
sigma2 = 4
n = 20
logl =  -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
return(logl)
}
logl
y = rnorm(20, 1, 2)
y
mu = seq(-5, 5, by = 0.5)
mu
lik = function(mu, y){
sigma2 = 4
n = 20
logl =  -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
return(logl)
}
plot(mu, lik, type = "l")
y = rnorm(20, 1, 2)
y
mu = seq(-5, 5, by = 0.5)
mu
lik = function(mu, y){
sigma2 = 4
n = 20
logl =  -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
return(logl)
}
length(mu)
length(lik)
plot(mu, lik, type = "l")
y = rnorm(20, 1, 2)
y
mu = seq(-5, 5, by = 0.5)
mu
lik = function(mu, y){
sigma2 = 4
n = 20
logl =  -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
}
length(mu)
length(lik)
plot(mu, lik, type = "l")
y = rnorm(20, 1, 2)
y
mu = seq(-5, 5, by = 0.5)
mu
lik = function(mu, y){
sigma2 = 4
n = 20
logl =  -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
}
length(mu)
length(lik)
plot(mu, lik, type = "l")
y = rnorm(20, 1, 2)
y
mu = seq(-5, 5, by = 0.5)
mu
lik = function(mu, y){
sigma2 = 4
n = 20
logl =  -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
}
length(mu)
length(lik)
plot(mu, sapply(mu, FUN = lik), type = "l")
y = rnorm(20, 1, 2)
y
mu = seq(-5, 5, by = 0.5)
mu
lik = function(mu, y){
sigma2 = 4
n = 20
logl =  -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
}
length(mu)
length(lik)
plot(mu, sapply(mu, FUN = lik), type = "l")
y = rnorm(20, 1, 2)
y
mu = seq(-5, 5, by = 0.5)
mu
lik = function(mu, y){
sigma2 = 4
n = 20
logl =  -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
}
length(mu)
length(lik)
sapply(mu, FUN = lik)
y = rnorm(20, 1, 2)
y
mu = seq(-5, 5, by = 0.5)
mu
lik = function(mu, y){
sigma2 = 4
n = 20
logl =  -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
return(logl)
}
length(mu)
length(lik)
sapply(mu, FUN = lik)
y = rnorm(20, 1, 2)
y
mu = seq(-5, 5, by = 0.5)
mu
lik = function(mu, y){
sigma2 = 4
n = 20
logl =  -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
return(logl)
}
length(mu)
length(lik)
sapply(mu, FUN = lik)
y = rnorm(20, 1, 2)
mu = seq(-5, 5, by = 0.5)
lik = function(mu, y){
sigma2 = 4
n = 20
logl =  -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
return(logl)
}
plot(mu, sapply(mu, FUN = lik), type = "l")
y = rnorm(20, 1, 2)
mu = seq(-5, 5, by = 0.5)
lik = function(mu, y){
sigma2 = 4
n = 20
logl =  -.5*n*log(2*pi) -.5*n*log(sigma2) - (1/(2*sigma2))*sum((y-mu)**2)
return(logl)
}
#plot(mu, sapply(mu, FUN = lik), type = "l")
a = matrix(c(0.5,0.25,0.25,  0.25,0.5,0.25,  0.25,0.25,0.5))
a
a = matrix(c(0.5,0.25,0.25,  0.25,0.5,0.25,  0.25,0.25,0.5), ncol = 3, nrow = 3, byrow = TRUE)
A
a
b = matrix(c(0,0.5,0.5  0.5,0,0.5,  0.5,0.5,0), ncol = 3, nrow = 3, byrow = TRUE)
b = matrix(c(0,0.5,0.5,  0.5,0,0.5,  0.5,0.5,0), ncol = 3, nrow = 3, byrow = TRUE)
b
b %*% b
b = a
b
b = matrix(c(0,0.5,0.5,  0.5,0,0.5,  0.5,0.5,0), ncol = 3, nrow = 3, byrow = TRUE)
a %*%b
c = a %*% b
b %*% c
library(showtext)
install.packages('showtext')
library(showtext)
install.packages('showtext')
library(showtext)
install.packages('showtext')
library(showtext)
update.packages(checkBuilt = TRUE)
update.packages(checkBuilt = TRUE)
load("/Users/ginzheng/Documents/GitHub/matters-metadata/csv/STM_matters.RData")
setwd("~/Documents/Github/decentralizedcommplatform/tg_data")
library(lubridate)
library(ggplot2)
library(scales)
fc_data<- read.csv('factcheck.csv')
fc_data$Date <- as.Date(fc_data$Date)
fc_data$Time <- as.POSIXct(fc_data$Time, format = "%H:%M")
fc_data$Views <- as.numeric(fc_data$Views)
fc_daily_plot <- ggplot(fc_data, aes(x=Date, y=Views)) + ggtitle('Fact Check Channel Daily Views')
fc_daily_plot + geom_line(alpha = 0.5, colour="black") + geom_point(size=.4, alpha =0.8, colour="black") +
scale_x_date(breaks=date_breaks("2 weeks")) + scale_y_continuous(breaks=seq(0,60000,5000))
fc_minute_plot <-  ggplot(fc_data, aes(x=Time, y=Views, group=Date)) + ggtitle('Fact Check Channel Minutely Views')
fc_minute_plot + geom_point(size=.5, alpha = 0.5, colour="black") +
scale_x_datetime(breaks=date_breaks("2 hour"), labels=date_format("%H:%M")) +
scale_y_continuous(breaks=seq(0,60000,5000))
w_data<- read.csv('weather.csv')
w_data$Date <- as.Date(w_data$Date)
w_data$Time <- as.POSIXct(w_data$Time, format = "%H:%M")
w_data$Views <- as.numeric(w_data$Views)
w_daily_plot <- ggplot(w_data, aes(x=Date, y=Views)) + ggtitle('Weather Channel Daily Views')
w_daily_plot + geom_line(alpha=0.5, colour="blue") + geom_point(size=.4, alpha =0.8, colour="blue4") +
scale_x_date(breaks=date_breaks("2 weeks")) + scale_y_continuous(breaks=c(0,50,500,5000,10000,50000,100000,150000,200000))
w_minute_plot <-  ggplot(w_data, aes(x=Time, y=Views, group=Date)) + ggtitle('Weather Channel Minutely Views')
w_minute_plot + geom_point(size=.5, alpha = 0.5, colour="blue2") +
scale_x_datetime(breaks=date_breaks("2 hour"), labels=date_format("%H:%M")) +
scale_y_continuous(breaks=c(0,50,500,5000,10000,50000,100000,150000,200000), limits = c(0,100000))
sh_data<- read.csv('silverhair.csv')
sh_data$Date <- as.Date(sh_data$Date)
sh_data$Time <- as.POSIXct(sh_data$Time, format = "%H:%M")
sh_data$Views <- as.numeric(sh_data$Views)
sh_daily_plot <- ggplot(sh_data, aes(x=Date, y=Views)) + ggtitle('Silver Hair Channel Daily Views')
sh_daily_plot + geom_line(colour="darkgoldenrod2") + geom_point(size=.4, alpha =0.8, colour="darkorange2") +
scale_x_date(breaks=date_breaks("2 weeks")) + scale_y_continuous(breaks=seq(500,70000,5000))
sh_minute_plot <-  ggplot(sh_data, aes(x=Time, y=Views, group=Date)) + ggtitle('Silver Hair Channel Minutely Views')
sh_minute_plot + geom_point(size=.5, alpha = 0.5, colour="darkorange") +
scale_x_datetime(breaks=date_breaks("2 hour"), labels=date_format("%H:%M")) +
scale_y_continuous(breaks=seq(500,50000,5000), limits = c(0,45500))
al_data<- read.csv('adolescent.csv')
al_data$Date <- as.Date(al_data$Date)
al_data$Time <- as.POSIXct(al_data$Time, format = "%H:%M")
al_data$Views <- as.numeric(al_data$Views)
al_daily_plot <- ggplot(al_data, aes(x=Date, y=Views)) + ggtitle('Middle School Students Channel Daily Views')
al_daily_plot + geom_line(alpha = 0.3, colour="maroon2") + geom_point(size=.4, alpha =0.8, colour="violetred3") +
scale_x_date(breaks=date_breaks("2 weeks")) + scale_y_continuous(breaks=seq(0,125000,5000))
al_minute_plot <-  ggplot(al_data, aes(x=Time, y=Views, group=Date)) + ggtitle('Middle School Students Channel Minutely Views')
al_minute_plot + geom_point(size=.5, alpha = 0.5, colour="hotpink1") +
scale_x_datetime(breaks=date_breaks("2 hour"), labels=date_format("%H:%M")) +
scale_y_continuous(breaks=seq(0,1250000,30000))
swj_data<- read.csv('standwithjournalists.csv')
swj_data$Date <- as.Date(swj_data$Date)
swj_data$Time <- as.POSIXct(swj_data$Time, format = "%H:%M")
swj_data$Views <- as.numeric(swj_data$Views)
swj_daily_plot <- ggplot(swj_data, aes(x=Date, y=Views)) + ggtitle('Stand with Journalists Channel Daily Views')
swj_daily_plot + geom_line(alpha = 0.6, colour="springgreen3") + geom_point(size=.4, alpha =0.8, colour="green4") +
scale_x_date(breaks=date_breaks("4 days")) + scale_y_continuous(breaks=seq(1000,65000,5000))
swj_minute_plot <-  ggplot(swj_data, aes(x=Time, y=Views, group=Date)) + ggtitle('Stand with Journalists Channel Minutely Views')
swj_minute_plot + geom_point(size=.5, alpha = 1, colour="limegreen") +
scale_x_datetime(breaks=date_breaks("2 hour"), labels=date_format("%H:%M")) +
scale_y_continuous(breaks=seq(0,1250000,5000))
setwd("~/Desktop/Research/tech&protest/matters_data")
Sys.setlocale(category = 'LC_ALL','en_US.UTF-8')
setwd("~/Documents/Github/dmp_hk/matters_data")
Sys.setlocale(category = 'LC_ALL','en_US.UTF-8')
library(quanteda)
library(stm)
library(readr)
library(igraph)
library(showtext)
library(sysfonts)
library(wordcloud)
library(stringr)
# plot topics
load("STM_matters.RData")
# estimate effect
#out$meta$date <- as.numeric(out$meta$date)
##out$meta$MAT <- as.factor(out$meta$MAT)
prep <- estimateEffect(c(1:30) ~ MAT + s(date), stm.out, metadata = out$meta)
#process text data
out <- convert(doc.features, to = "stm", docvars = data)
# EDA
data <- read.csv("comprehensive.csv", encoding = 'utf-8')
data$seg_words <- as.character(data$seg_words)
corpus <- corpus(data$seg_words,
docvars=data)
doc.features <- dfm(corpus,
remove=stopwords(language = "zh", source = "misc"),
stem=T, remove_punct=T, what="fastestword")
topfeatures(doc.features, 20)
#process text data
out <- convert(doc.features, to = "stm", docvars = data)
# estimate effect
#out$meta$date <- as.numeric(out$meta$date)
##out$meta$MAT <- as.factor(out$meta$MAT)
prep <- estimateEffect(c(1:30) ~ MAT + s(date), stm.out, metadata = out$meta)
out$meta$date <- as.numeric(out$meta$date)
out$meta$MAT <- as.numeric(out$meta$MAT)
# EDA
data <- read.csv("comprehensive.csv", encoding = 'utf-8')
data$seg_words <- as.character(data$seg_words)
corpus <- corpus(data$seg_words,
docvars=data)
doc.features <- dfm(corpus,
remove=stopwords(language = "zh", source = "misc"),
stem=T, remove_punct=T, what="fastestword")
topfeatures(doc.features, 20)
#process text data
out <- convert(doc.features, to = "stm", docvars = data)
summary(out$meta$MAT)
out$meta$date <- as.Date(out$meta$createdAt, format="%Y-%m-%d")
hist(out$meta$date, breaks="month")
out$meta$date <- as.numeric(out$meta$date)
out$meta$MAT <- as.numeric(out$meta$MAT)
# plot topics
load("STM_matters.RData")
labelTopics(stm.out)
# estimate effect
#out$meta$date <- as.numeric(out$meta$date)
##out$meta$MAT <- as.factor(out$meta$MAT)
prep <- estimateEffect(c(1:30) ~ MAT + s(date), stm.out, metadata = out$meta)
plot.estimateEffect(prep, covariate = "MAT",
method="difference", cov.value1=1, cov.value2=0)
plot.estimateEffect(prep, covariate = "MAT", xlim = c(-.1, .1),
method="difference", cov.value1=1, cov.value2=0)
plot.estimateEffect(prep, covariate = "MAT", xlim = c(-.1, .1),
method="difference", cov.value1="r", cov.value2="l")
findThoughts(stm.out, out$meta$seg_words, topics=7, n=10)
findThoughts(stm.out, out$meta$seg_words, topics=25, n=10)
findThoughts(stm.out, out$meta$seg_words, topics=9, n=10)
findThoughts(stm.out, out$meta$seg_words, topics=4, n=10)
findThoughts(stm.out, out$meta$seg_words, topics=8, n=10)
findThoughts(stm.out, out$meta$seg_words, topics=21, n=10)
findThoughts(stm.out, out$meta$seg_words, topics=11, n=10)
findThoughts(stm.out, out$meta$seg_words, topics=30, n=10)
findThoughts(stm.out, out$meta$seg_words, topics=7, n=10)
plot.STM(stm.out, n=10, family = 'Heiti TC Medium')
findThoughts(stm.out, out$meta$seg_words, topics=25, n=10)
findThoughts(stm.out, out$meta$seg_words, topics=27, n=10)
findThoughts(stm.out, out$meta$seg_words, topics=11, n=10)
plot.estimateEffect(prep, covariate = "MAT", topics = c(3,10,21,25),
xlim = c(-60, 60), labeltype = "custom",
custom.labels = c('Hong Kong Anti-extradition', 'Shenzhen Labor Rights', 'Taiwan Same-sex Marriage', 'Media & Business'),
method="difference", cov.value1="Right", cov.value2="Left")
plot.estimateEffect(prep, covariate = "MAT", topics = c(3,10,21,25),
xlim = c(-60, 60), labeltype = "custom",
custom.labels = c('Hong Kong Anti-extradition', 'Shenzhen Labor Rights', 'Taiwan Same-sex Marriage', 'Media & Business'),
method="difference", cov.value1=1, cov.value2=0)
plot(prep, covariate = "date", method="continuous", model = z, topic=10, xaxt = "n", xlab = "Time")
monthseq <- seq(from=as.Date("2017-12-01"), to=as.Date("2019-10-01"), by = "3 month")
plot(prep, covariate = "date", method="continuous", topic=10, xaxt = "n", xlab = "Time")
monthseq <- seq(from=as.Date("2017-12-01"), to=as.Date("2019-10-01"), by = "3 month")
monthnames <- months(monthseq)
l <- c(17500, 17600, 17700, 17800, 17900, 18000, 18100, 18200)
axis(1, at=l, labels=monthnames)
plot.estimateEffect(prep, covariate = "MAT", topics = c(3,10,21,25),  labeltype = "custom",
custom.labels = c('Hong Kong Anti-extradition', 'Shenzhen Labor Rights', 'Taiwan Same-sex Marriage', 'Media & Business'),
method="difference", cov.value1=1, cov.value2=0)
plot.estimateEffect(prep, covariate = "MAT", topics = c(3,10,21,25),  labeltype = "custom",
custom.labels = c('Hong Kong Anti-extradition', 'Shenzhen Labor Rights', 'Taiwan Same-sex Marriage', 'Media & Business'),
method="difference", cov.value1="right", cov.value2="left")
plot.estimateEffect(prep, covariate = "MAT", topics = c(3,10,21,25),  labeltype = "custom",
custom.labels = c('Hong Kong Anti-extradition', 'Shenzhen Labor Rights', 'Taiwan Same-sex Marriage', 'Media & Business'),
xlab = "Left         Right"
method="difference", cov.value1="right", cov.value2="left")
plot.estimateEffect(prep, covariate = "MAT", topics = c(3,10,21,25),  labeltype = "custom",
custom.labels = c('Hong Kong Anti-extradition', 'Shenzhen Labor Rights', 'Taiwan Same-sex Marriage', 'Media & Business'),
xlab = "Left         Right",
method="difference", cov.value1="right", cov.value2="left")
plot.estimateEffect(prep, covariate = "MAT", topics = c(3,10,21,25),  labeltype = "custom",
custom.labels = c('Hong Kong Anti-extradition', 'Shenzhen Labor Rights', 'Taiwan Same-sex Marriage', 'Media & Business'),
xlab = "Left                              Right",
method="difference", cov.value1="right", cov.value2="left")
?labelTopics
?plot.estimateEffect
plot.estimateEffect(prep, covariate = "MAT", topics = c(3,10,21,25),  labeltype = "custom",
custom.labels = c('Hong Kong Anti-extradition', 'Shenzhen Labor Rights', 'Taiwan Same-sex Marriage', 'Media & Business'),
xlab = "      Left                              Right",
method="difference", cov.value1="right", cov.value2="left")
